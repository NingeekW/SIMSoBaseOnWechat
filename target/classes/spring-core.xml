<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		 http://www.springframework.org/schema/context 
		 http://www.springframework.org/schema/context/spring-context-3.0.xsd  
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 加载properties文件 -->	
	<context:property-placeholder  location="classpath:jdbc.properties" order="1" />
	
	<!-- 配置数据库连接池 -->
	<!-- 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean> 
	-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> 
        <property name="driverClass" value="${jdbc.driverClassName}" /> 
        <property name="jdbcUrl" value="${jdbc.url}" /> 
        <property name="user" value="${jdbc.username}" /> 
        <property name="password" value="${jdbc.password}" /> 
    </bean> 
    
	<!-- 配置事务管理器-->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 配置mybatis sessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:cn/ning3f1/cms/dao/mapping/*.xml" />
	</bean>

	<!-- 配置声明式事务切面 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />

			<tx:method name="query*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="select*" read-only="true" />

			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 应用事务切面到Service层 -->
	<aop:config expose-proxy="true">
	
		<!-- 事务实施切入点,定义在service包和所有子包里的任意类的任意方法的执行：-->
		<aop:pointcut id="txPointcut" expression="execution(* cn.ning3f1.cms.service..*.*(..))" />
		<!-- 织入切面通知 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
		<!-- 通过AOP切面实现读/写库选择 -->
		<!--
			<aop:aspect order="-2147483648" ref="readWriteDataSourceTransactionProcessor">
			<aop:around pointcut-ref="txPointcut" method="determineReadOrWriteDB"/>
			</aop:aspect>
		-->
	</aop:config>

	<!-- 扫描对应package，支持注解 -->
	<context:component-scan base-package="cn.ning3f1.cms.service" />
	<!-- 
	<context:component-scan base-package="cn.ning3f1.gcts.access.*.action" />
	 -->
	
	<!-- spring启动时自动将ApplicationContext注入到该Bean中 -->
	<!-- 
	<bean id="springUtils" class="cn.ning3f1.carry.common.util.ContextUtil" />
	 -->
	 
</beans>
